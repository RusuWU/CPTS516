// Implement a f u n c t i o n t h a t r e t u r n s Cmax
void CacCmax ( int c1 , int c2 , int c3 , int c ) {
int Cmax = 0 ;
for ( int d = 0 ; d <= 1 ; d++) {
for ( int d1 = 0 ; d1 <= 1 ; d1++) {
for ( int d2 = 0 ; d2 <= 1 ; d2++) {
for ( int d3 = 0 ; d3 <= 1 ; d3++) {
int max = abs ( c1 ✯ d1 + c2 ✯ d2 + c3 ✯ d3 ) ;
i f (max > Cmax) Cmax = max ;
}
}
}
}
return Cmax;
}
// Implement a f u n c t i o n t h a t r e t u r n s t h e v a l u e KC from a g i v e n c o n s t a n t C>=0.
int CacKc ( int C) {
int Kc = 0 ;
while (C > 0 ) {
C = C/ 2;
Kc++;
}
return Kc ;
}
// Implement a f u n c t i o n t h a t r e t u r n s t h e v a l u e b i from a g i v e n c o n s t a n t C>=0 and i ,
int CacBi ( int C, int i ) {
i f ( i == CacKc (C) + 1 ) return 0 ;
for ( i=i ❂1; i >=0;i ❂❂){
C = C/ 2;
}
return C % 2 ;
}
